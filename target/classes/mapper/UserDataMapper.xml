<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aurora.mapper.UserDataMapper">
  <resultMap id="BaseResultMap" type="com.aurora.domain.UserData">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="nickname" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="displayurl" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.aurora.domain.UserData">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="nickname" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="displayurl" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="bg" javaType="_byte[]" jdbcType="LONGVARBINARY" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nickname, password, displayurl
  </sql>
  <sql id="Blob_Column_List">
    bg
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.aurora.domain.UserDataExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from userdata
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.aurora.domain.UserDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from userdata
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from userdata
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from userdata
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.aurora.domain.UserData">
    insert into userdata (id, nickname, password, 
      displayurl, bg)
    values (#{id,jdbcType=CHAR}, #{nickname,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{displayurl,jdbcType=CHAR}, #{bg,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.aurora.domain.UserData">
    insert into userdata
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="displayurl != null">
        displayurl,
      </if>
      <if test="bg != null">
        bg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="displayurl != null">
        #{displayurl,jdbcType=CHAR},
      </if>
      <if test="bg != null">
        #{bg,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aurora.domain.UserData">
    update userdata
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="displayurl != null">
        displayurl = #{displayurl,jdbcType=CHAR},
      </if>
      <if test="bg != null">
        bg = #{bg,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.aurora.domain.UserData">
    update userdata
    set nickname = #{nickname,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      displayurl = #{displayurl,jdbcType=CHAR},
      bg = #{bg,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aurora.domain.UserData">
    update userdata
    set nickname = #{nickname,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      displayurl = #{displayurl,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>